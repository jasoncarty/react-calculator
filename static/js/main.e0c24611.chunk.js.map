{"version":3,"sources":["components/RadioButton/RadioButton.module.css","App.module.css","store.js","constants.js","components/utils.js","components/InputBlock/index.js","components/InputBlock/actions.js","components/RadioButton/index.js","components/AnswerBlock/index.js","components/AnswerBlock/actions.js","App.js","serviceWorker.js","index.js","components/AnswerBlock/AnswerBlock.module.css","components/InputBlock/InputBlock.module.css"],"names":["module","exports","radioButton","text","app","row","block","store","createStore","combineReducers","calculationType","state","arguments","length","undefined","type","fieldValues","action","index","payload","rest","Object","objectWithoutProperties","map","_toPropertyKey","objectSpread","defineProperty","Number","window","__REDUX_DEVTOOLS_EXTENSION__","convertIntoOperator","+","x","y","*","validator","val","value","replace","splitVal","split","InputBlock","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleChange","e","target","setState","props","changeValue","inherits","createClass","key","className","react_default","a","createElement","cs","styles","inputBlock","content","input","onChange","Component","connect","dispatch","_ref","RadioButton","assign","name","AnswerBlock","answer","handleRadioChange","updateCalculationType","_this$props","answerBlock","noMargin","radioList","components_RadioButton","checked","nextProps","entries","initialValue","keys","reduce","acc","calculate","changeCalculationType","App","components_InputBlock","components_AnswerBlock","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0c24611.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButton\":\"RadioButton_radioButton__HL1o5\",\"text\":\"RadioButton_text__2KNfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3ZUnC\",\"row\":\"App_row__3CC49\",\"block\":\"App_block__3qWNM\"};","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport { SUM, MULTIPLY, CHANGE } from \"./constants\";\n\n/**\n * @param  {} state=\"+\"\n * @param  {} action\n * @returns {String}\n */\nexport const calculationType = (state = \"+\", action) => {\n  switch (action.type) {\n    case SUM:\n      return \"+\";\n    case MULTIPLY:\n      return \"*\";\n    default:\n      return state;\n  }\n};\n\n/**\n * @param  {} state={}\n * @param  {} action\n * @returns {Object}\n */\nexport const fieldValues = (state = {}, action) => {\n  switch (action.type) {\n    case CHANGE: {\n      const { index, payload } = action;\n      // eslint-disable-next-line no-unused-vars\n      const { [index]: value, ...rest } = state;\n      if (payload === \"\") {\n        return rest;\n      }\n      return {\n        ...state,\n        [index]: Number(payload),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(\n  combineReducers({\n    calculationType,\n    fieldValues\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","export const SUM = \"SUM\";\nexport const MULTIPLY = \"MULTIPLY\";\nexport const CHANGE = \"CHANGE\";\n","const convertIntoOperator = {\n  \"+\": (x, y) => x + y,\n  \"*\": (x, y) => x * y,\n};\n\n/**\n * @param  {} {fieldValues\n * @param  {} calculationType}\n * @returns {Object}\n */\nexport const calculate = ({ fieldValues, calculationType }) => {\n  /*\n    Deal with the values input into the fields depending on\n    what kind of calculation type\n  */\n  if (Object.entries(fieldValues).length > 1 && calculationType) {\n    let initialValue = 0;\n\n    if (calculationType === \"*\") {\n      initialValue = 1;\n    }\n\n    return {\n      answer: Object.keys(fieldValues).reduce((acc, key) => {\n        if (fieldValues[key] === \"\") {\n          return Number(acc);\n        }\n        return convertIntoOperator[calculationType](acc, Number(fieldValues[key]));\n      }, initialValue)\n    };\n  }\n\n  return { answer: 0 };\n};\n\n/**\n * @param  {} val\n * @returns {String}\n */\nexport const validator = (val) => {\n  // Replace everything that is not a number\n  let value = val.replace(/\\D+/g, \"\");\n\n  // Ensure that we dont get numbers that start with 0\n  const splitVal = value.split(\"\");\n  if (splitVal.length && splitVal[0] === \"0\" && splitVal[1]) {\n    value = splitVal[1];\n  }\n  return value;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport cs from \"classnames\";\n\nimport { changeFieldValue } from \"./actions\";\nimport { validator } from \"../utils\";\nimport styles from \"./InputBlock.module.css\";\n\nexport class InputBlock extends Component {\n  static propTypes = {\n    index: PropTypes.number.isRequired,\n    changeValue: PropTypes.func.isRequired,\n    className: PropTypes.string\n  }\n\n  state = {\n    value: \"\"\n  }\n\n\n  /**\n   * @param  {} e\n   */\n  handleChange = (e) => {\n    if (typeof e.target.value === \"string\") {\n      const value = validator(e.target.value);\n      this.setState({ value });\n      this.props.changeValue({\n        index: this.props.index,\n        payload: value\n      });\n    }\n  }\n\n  render() {\n    const { value } = this.state;\n    const { className } = this.props;\n\n    return (\n      <div className={cs(styles.inputBlock, className)}>\n        <div className={styles.content}>\n          <div className={styles.text}>\n            {`Value ${this.props.index + 1}: `}\n          </div>\n          <input\n            type=\"text\"\n            className={styles.input}\n            onChange={this.handleChange}\n            value={value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changeValue: payload => dispatch(\n    changeFieldValue(payload)\n  )\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(InputBlock);\n","import { CHANGE } from \"../../constants\";\n\n/**\n * @param  {} {index\n * @param  {} payload}\n * @returns {Object}\n */\nexport const changeFieldValue = ({index, payload}) => ({\n  type: CHANGE,\n  index,\n  payload\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./RadioButton.module.css\";\n\n/**\n * @param  {} {text\n * @param  {} onChange\n * @param  {} value\n * @param  {} ...rest}\n * @returns {Object}\n */\nconst RadioButton = ({ text, onChange, value, ...rest }) => (\n  <div className={styles.radioButton}>\n    <input\n      type=\"radio\"\n      name=\"calculationType\"\n      value={value}\n      onChange={onChange}\n      {...rest}\n    />\n    <div className={styles.text}>{text}</div>\n  </div>\n);\n\nRadioButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default RadioButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport cs from \"classnames\";\n\nimport styles from \"./AnswerBlock.module.css\";\nimport RadioButton from \"../RadioButton\";\nimport { changeCalculationType } from './actions';\nimport { calculate } from \"../utils\";\n\nexport class AnswerBlock extends Component {\n  static propTypes = {\n    fieldValues: PropTypes.PropTypes.shape().isRequired,\n    updateCalculationType: PropTypes.func.isRequired,\n    calculationType: PropTypes.string.isRequired,\n    className: PropTypes.string\n  }\n\n  state = {\n    answer: 0\n  }\n\n  /**\n   * @param  {} nextProps\n   * @returns  {Object}\n   */\n  static getDerivedStateFromProps(nextProps) {\n    return calculate(nextProps);\n  }\n\n  /**\n   * @param  {} e\n   */\n  handleRadioChange = (e) => {\n    if (e.target.value) {\n      this.props.updateCalculationType(e.target.value);\n    }\n  }\n\n  render() {\n    const { calculationType, className } = this.props;\n\n    return (\n      <div className={cs(styles.answerBlock, className, styles.noMargin)}>\n        <div className={styles.content}>\n          <div className={styles.radioList}>\n            <RadioButton\n              text=\"Sum\"\n              value=\"SUM\"\n              onChange={this.handleRadioChange}\n              checked={calculationType === '+'}\n            />\n            <RadioButton\n              text=\"Multiply\"\n              value=\"MULTIPLY\"\n              onChange={this.handleRadioChange}\n              checked={calculationType === '*'}\n            />\n          </div>\n          <div className={styles.answer}>\n            Result: {this.state.answer}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n/**\n * @param  {} state\n * @returns {Object}\n */\nconst mapStateToProps = (state) => ({\n  fieldValues: state.fieldValues,\n  calculationType: state.calculationType\n})\n\n/**\n * @param  {} dispatch\n * @returns {Object}\n */\nconst mapDispatchToProps = (dispatch) => ({\n  updateCalculationType: (payload) => dispatch(changeCalculationType(payload))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AnswerBlock);\n","/**\n * @param  {} payload\n * @returns {Object}\n */\nexport const changeCalculationType = (payload) => ({\n  type: payload\n});\n","import React from \"react\";\nimport cs from \"classnames\";\n\nimport InputBlock from \"./components/InputBlock\";\nimport AnswerBlock from \"./components/AnswerBlock\";\n\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={styles.app}>\n      <div className={cs(styles.row)}>\n        <InputBlock index={0} className={styles.block}></InputBlock>\n        <InputBlock index={1} className={styles.block}></InputBlock>\n        <InputBlock index={2} className={styles.block}></InputBlock>\n      </div>\n      <div className={cs(styles.row)}>\n        <AnswerBlock className={styles.block}/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\nimport \"./index.css\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerBlock\":\"AnswerBlock_answerBlock__1DaiG\",\"content\":\"AnswerBlock_content__3e2wj\",\"radioList\":\"AnswerBlock_radioList__1J8Pz\",\"answer\":\"AnswerBlock_answer__1Pey5\",\"noMargin\":\"AnswerBlock_noMargin__213us\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"InputBlock_inputBlock__3Vaq9\",\"content\":\"InputBlock_content__1FT_3\",\"text\":\"InputBlock_text__1t9nt\",\"input\":\"InputBlock_input__1UXqr\"};"],"sourceRoot":""}